{
  "hash": "7d3c6e9bdd46378dc296adcfd9f1afd8",
  "result": {
    "markdown": "---\ntitle: Untitled\nsubtitle: A slightly longer title\nformat:\n  360-analysis-html: default\nauthor: James Goldie\ndate: last-modified\ncode-fold: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at /workspaces/report-iwd2024\n```\n\n\n:::\n:::\n\n\n# SDG Indicator 5.4.1\n\nProportion of time spent on unpaid domestic chores and care work, by sex, age and location (percent)\n\nWe'll get the data from the [SDG Global Database](https://unstats.un.org/sdgs/dataportal). They do have a [SDG API](https://unstats.un.org/sdgs/UNSDGAPIV5/swagger/index.html), but I couldn't get the data endpoint to work, so let's work with a manual download instead:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere(\"data\", \"sdg-indicator-5-4-1.xlsx\") |>\n  read_excel(sheet = \"Goal5\") |>\n  janitor::clean_names() ->\nall_data\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data |>\n  select(starts_with(\"series\"), geo_area_name, time_period, time_detail, sex, age, location,\n    value) |>\n  mutate(\n    age = fct(age, levels = c(\n      \"ALLAGE\", \"3+\", \"5+\", \"6+\", \"6-65\",\n      \"10+\", \"10-14\", \"12+\", \"12-14\", \"12-24\", \"14+\", \"15+\", \"15-24\", \"15-49\",\n      \"15-64\",  \"16+\", \"18+\", \"20+\", \"20-24\", \"20-64\", \"20-74\", \"25-34\",\n      \"25-44\", \"35-44\", \"45-54\", \"45-64\", \"55-64\", \"65+\", \"65-74\", \"75-84\",\n      \"85+\"\n    )),\n    location = fct(location),\n    sex = fct(sex),\n    value = as.numeric(value)) ->\nall_data_tidy\n```\n:::\n\n\nOkay, we have a bit of a mess of age groups. Let's try to see which countries use which age groups:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_tidy |>\n  select(geo_area_name, age) |>\n  group_by(geo_area_name, age) |>\n  count() |>\n  ungroup() |>\n  pivot_wider(names_from = c(age), values_from = c(n), values_fill = 0) |>\n  write_csv(here(\"data\", \"sdg-age-groups.csv\"))\n```\n:::\n\n\nOkay, nobody's reporting `ALLAGE`. It looks like most do: 10+, 15+, 15-24, 25-44, 45-54, 55-64, 65+ (there are a few exceptions though). Thankfully, it doesn't appear as if many countries switch age groups based on whether they're breaking down further.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_tidy |>\n  filter(age %in% c(\"10+\", \"15+\", \"15-24\", \"25-44\", \"45-54\", \"55-64\", \"65+\")) |>\n  filter(geo_area_name == \"Australia\") |>\n  pull(time_detail) |>\n  unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2006\"      \"2020-2021\"\n```\n\n\n:::\n\n```{.r .cell-code}\nall_data_tidy |>\n  select(geo_area_name, time_detail) |>\n  group_by(geo_area_name, time_detail) |>\n  count() |>\n  ungroup() |>\n  pivot_wider(names_from = c(time_detail), values_from = c(n), values_fill = 0) |>\n  write_csv(here(\"data\", \"sdg-time-groups.csv\"))\n```\n:::\n\n\nIt looks like frequency is all over the place for this data. Let's visualise it more clearly:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data_tidy |>\n  select(geo_area_name, time_detail) |>\n  group_by(geo_area_name, time_detail) |>\n  count() |>\n  ungroup() |>\n  # average out year ranges\n  separate(time_detail, c(\"start\", \"end\"), sep = \"-\", fill = \"right\") |>\n  mutate(\n    start = as.numeric(start),\n    end = as.numeric(end),\n    year = if_else(\n      is.na(end),\n      start,\n      start + (end - start) / 2),\n    date = date_decimal(year)) |>\n  select(-c(start, end, year)) |>\n  # sort countries by total number of reports\n  group_by(geo_area_name) |>\n  add_tally(name = \"n_obs\") |>\n  mutate(country = paste0(geo_area_name, \": \", n_obs)) ->\nreporting_frequencies\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(reporting_frequencies) +\n  aes(\n    x = fct_reorder(.f = country, .x = n_obs),\n    y = date,\n    group = geo_area_name) +\n  geom_line(colour = \"grey\") +\n  geom_point(fill = \"#333333\", colour = \"white\", size = 2, shape = 21) +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n    panel.grid.major.y = element_blank()) +\n  labs(\n    x = NULL, y = NULL,\n    title = \"How often do countries report on unpaid chores and work?\") ->\nfreq_plot\n\nggsave(here(\"out\", \"assets\", \"freq-plot.png\"), height = 16, width = 9,\n  units = \"in\", bg = \"white\")\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}