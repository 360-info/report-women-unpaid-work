{
  "hash": "63e4c41799018661b029b8e93840bd47",
  "result": {
    "markdown": "---\ntitle: HILDA survey\nsubtitle: Time spent on unpaid domestic or care work\nformat:\n  360-analysis-html:\n    # hide code chunk output unless otherwise specified to prevent privacy\n    # leaks when previewing data frames\n    execute:\n      output: false\nauthor: James Goldie\ndate: last-modified\ncode-fold: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(hildareadR)\nlibrary(gganimate)\nlibrary(here)\n\nhilda_dir <- here(\"data\", \"raw-hilda\")\n```\n:::\n\n\n:::{.callout-note}\n\nThe raw data underpinning this analysis is not version controlled. To reproduce the analysis, you must request permission from DSS and download it via the [Australian Data Archive](https://dataverse.ada.edu.au/dataset.xhtml?persistentId=doi:10.26193/R4IN30).\n\nRaw data should be downloaded as `.dta` files put directly into `/data/raw-hilda` (not in subfolders), keeping the names provided by ADA.\n\nIn order to ensure that respondent data is not accidentally leaked during the render process, chunk output is turned off for most chunks until the end; I recommend you run this analysis interactively.\n\nThe render process also checks to ensure all groups are of sufficient size before rendering outputs.\n\n:::\n\n# Explore the data\n\nAlthough we'll use the [`{hildareadR}` package](https://cran.r-project.org/web/packages/hildareadR/) (by Sara and Sebastian Kalucza) to combine wave data and extract variables, it's still instructive to open the files using `{haven}` ourselves so that we can look at the column labels and particularly to understand the types of answers available.\n\nThis code assumes that all of the files have been unzipped directly into `here(\"data\", \"raw-hilda\")`. If you've downloaded them from Dataverse and they've unzipped into separate folders by zip file, pull them back up to the parent folder.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere(hilda_dir, \"Rperson_v220c.dta\") |>\n  haven::read_dta() ->\nall_lastwave\n\n# expand columns labels out so we can decide which id columns to use\ntibble(\n  name = names(all_lastwave),\n  question = map_chr(all_lastwave, ~ attr(.x, \"label\")),\n  answers = map(all_lastwave, ~ attr(.x, \"labels\"))) |>\n  unnest_longer(answers)\n```\n:::\n\n\n# Load the data\n\nVariable names in HILDA:\n\n- start with the wave identifier (`a` through `v`)\n- end with number from `1` to `20` corresponding to the person the interviewee is referring to (since once person responds on behalf of their household)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_vars <- tribble(\n  ~ short, ~ long,\n  \"lsmnhw\", \"Minutes per week - Housework\",\n\t\"lsmncar\", \"Minutes per week - Caring for disabled spouse/relative\",\n\t\"lsmnerr\", \"Minutes per week - Household errands\",\n\t\"lsmnhw\", \"Minutes per week - Housework\",\n\t\"lsmnocd\", \"Minutes per week - Looking after other children\",\n\t\"lshrcar\", \"Hours per week - Caring for disabled spouse/relative\",\n\t\"lshrchd\", \"Hours per week - Playing with your children\",\n\t\"lshrerr\", \"Hours per week - Household errands\",\n    #  'such as shopping, banking, paying bills, and keeping financial records (but do not include driving children to school and to other activities)'\n\t\"lshrhw\", \"Hours per week - Housework\",\n    # 'such as preparing meals, washing dishes, cleaning house, washing clothes, ironing and sewing'\n\t\"lshrocd\", \"Hours per week - Looking after other children\",\n\t\"lshrod\", \"Hours per week - Outdoor tasks\",\n    # 'including home maintenance (repairs, improvements, painting etc.), car maintenance or repairs and gardening'\n  \"lscar\", \"Combined - Caring for disabled spouse/relative\",\n  \"lschd\", \"Combined - Playing with your children\",\n  \"lscom\", \"Combined - Travelling to/from paid employment\",\n  \"lsemp\", \"Combined - Paid employment\",\n  \"lserr\", \"Combined - Household errands\",\n  \"lshw\", \"Combined - Housework\",\n  \"lsocd\", \"Combined - Playing with other peoples children\",\n  \"lsod\", \"Combined - Outdoor tasks\",\n  \"lsvol\", \"Combined - Volunteer/Charity work\",\n)\n\nall_lastwave |>\n  select(ends_with(survey_vars$short)) ->\ntimeobs\n\nattr(all_lastwave$vhhstate, \"labels\")\n```\n:::\n\n\nThe `{hildareadR}` package saves us a lot of the work of combining waves and selecting out variables of interest, as it handles the wave prefixes (although it is instructive to open the files in `{haven}` manually).\n\nThe variables of interest around hours/minutes per week spent on various activities all relate to the _reporting_ person's file. So we don't need `hgageNN` and `hgsexNN`, which relate to other people in the household — we just need `hgage` and `hgsex`, which related to the person doing the reporting.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_hilda(\n  c(\"hgsex\", \"hgage\", survey_vars$short),\n  waves = 1:22, dir = hilda_dir, release = 22) |>\n  select(\n    -contains(paste0(\"hgage\", 1:20)),\n    -contains(paste0(\"hgsex\", 1:20))) |>\n  select(xwaveid, wave, hgage, hgsex, everything()) ->\nall_data\n```\n:::\n\n\nLet's first see how much missing data there is. There is formally missing data in R's sense (`NA`), but this survey has also been coded such that negative numbers refer to various error codes (eg. \"Did not know\"). I'm going to collapse those down as missing too.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data |>\n  filter(hgage >= 0, hgsex >= 0) |>\n  # replace negative values with NA\n  mutate(across(starts_with(\"ls\"), ~ case_when(.x < 0 ~ NA, TRUE ~ .x))) |>\n  summarise(across(\n    where(is.numeric),\n    ~ length(which(is.na(.x))) / length(.x))) |>\n  t()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             [,1]\nhgage   0.0000000\nhgsex   0.0000000\nhgagef  0.0000000\nlshrerr 0.3570739\nlshrhw  0.3500212\nlshrod  0.3556669\nlshrchd 0.3782936\nlshrcar 0.3934411\nlsmnerr 0.3848165\nlsmnhw  0.3777923\nlshrocd 0.4235931\nlsmnocd 0.4235909\nlsmncar 0.4207043\nlsemp   0.3841965\nlscom   0.3925507\nlserr   0.3848209\nlshw    0.3777945\nlsod    0.3833655\nlschd   0.4055349\nlsocd   0.4235931\nlsvol   0.4139858\nlscar   0.4207043\nlscarb  0.8969597\nlscarmn 0.8969246\n```\n\n\n:::\n:::\n\n\nLooks like reporting age and sex are all there. For most other variables, around 35–45% of the data are missing.\n\nFor `lscarb` and `lscarmn`, nearly 90% are missing. I'm not entirely sure what they are — there's also `lsmncar` (caring minutes) and `lscar` (caring mins/hrs combined), so they must be something else (or perhaps a coding error - they don't appear in the data dictionary). Let's drop them.\n\nFor the remaining columns, I'd like to see if the missing data is concentrated in any age/sex/wave group:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data |>\n  select(-hgagef, -lscarb, -lscarmn) |>\n  filter(hgage >= 0, hgsex >= 0) |>\n  # replace negative values with NA\n  mutate(across(starts_with(\"ls\"), ~ case_when(.x < 0 ~ NA, TRUE ~ .x))) |>\n  mutate(age_group = cut(hgage, c(-Inf, 15, 25, 35, 45, 55, 65, 75, 85, Inf))) |>\n  select(xwaveid, wave, hgsex, age_group, hgage, everything()) |>\n  group_by(wave, hgsex, age_group) |>\n  summarise(across(starts_with(\"ls\"), list(\n    nobs = ~ length(.x),\n    pct_miss = ~ length(which(is.na(.x))) / length(.x)))) |>\n  ungroup() ->\ngrouped_missing_stats\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_missing_stats |>\n  select(wave, hgsex, age_group, ends_with(\"pct_miss\")) |>\n  mutate(group = paste(wave, hgsex, age_group)) |>\n  pivot_longer(ends_with(\"pct_miss\"), names_to = \"measure\") |>\n  ggplot() +\n    aes(y = group, x = measure, fill = value) +\n    geom_tile() +\n    scale_fill_distiller(palette = \"YlOrRd\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/missing-data-vis-1.png){width=672}\n:::\n:::\n\n\nOkay, this is too much to look at as one figure. Let's look at it wave by wave:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_missing_stats |>\n  select(wave, hgsex, age_group, ends_with(\"pct_miss\")) |>\n  mutate(group = paste(wave, hgsex, age_group)) |>\n  pivot_longer(ends_with(\"pct_miss\"), names_to = \"measure\") |>\n  filter(wave == \"u\") |>\n  ggplot() +\n    aes(y = group, x = measure, fill = value) +\n    geom_tile() +\n    scale_fill_distiller(palette = \"YlOrRd\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/missing-data-vis-bywave-1.png){width=672}\n:::\n:::\n\n\nMuch better. If we look through the 20 or so waves by altering the filter, we can see there's a lot of missing data in the 0-15s. That makes sense; I'm kind of surprised there are many of them answering the survey at all. I'll cut the 0-15s.\n\nGroup numbers start to tail off in the 75-80 bracket. They're not small enough to worry about identification (provided we don't disaggregate any further) — in the realm of a few dozen people per group — but I might cut the 75-85 bucket and just look at 75+ to be safe.\n\nNow let's start actually looking at stats around time spent on various activities. I still need to resolve the \"combined\" hours/minutes spent measures.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_data |>\n  select(-hgagef, -lscarb, -lscarmn) |>\n  filter(hgage >= 0, hgsex >= 0) |>\n  # replace negative time-spent values with NA\n  mutate(across(starts_with(\"ls\"), ~ case_when(.x < 0 ~ NA, TRUE ~ .x))) |>\n  mutate(age_group = cut(hgage, c(15, 25, 35, 45, 55, 65, 75, Inf))) |>\n  filter(!is.na(age_group), wave != \"a\") |>\n  select(xwaveid, wave, hgsex, age_group, hgage, everything()) ->\nrefined_groups\n\nrefined_groups |>\n  group_by(wave, hgsex, age_group) |>\n  summarise(across(starts_with(\"ls\"), list(\n    nobs = ~ length(.x),\n    p10 = ~ quantile(.x, 0.1, na.rm = TRUE),\n    q1 = ~ quantile(.x, 0.25, na.rm = TRUE),\n    mean = ~ mean(.x, na.rm = TRUE),\n    median = ~ median(.x, na.rm = TRUE),\n    q3 = ~ quantile(.x, 0.75, na.rm = TRUE),\n    p90 = ~ quantile(.x, 0.9, na.rm = TRUE)\n    ))) ->\ngrouped_stats\n```\n:::\n\n\nNow let's visualise the stats. Along the way, we'll confirm there none of the groups have gotten too small:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_vars |>\n  pull(long) |>\n  set_names(survey_vars$short) ->\nsurvey_mappings\n\ngrouped_stats |>\n  ungroup() |>\n  pivot_longer(\n    -c(wave, hgsex, age_group),\n    names_to = c(\"activity\", \"statistic\"),\n    names_sep = \"_\",\n    values_to = \"value\") |>\n  # recode the values\n  mutate(\n    sex = case_match(hgsex, 1 ~ \"Male\", 2 ~ \"Female\"),\n    wave_num = match(wave, letters),\n    year = wave_num + 2000,\n    activity_long = str_replace_all(activity, survey_mappings),\n    statistic = case_match(statistic,\n      \"nobs\" ~ \"Number of people\",\n      \"p10\" ~ \"10th percentile\",\n      \"q1\" ~ \"25th percentile\",\n      \"mean\" ~ \"Average\",\n      \"median\" ~ \"Median\",\n      \"q3\" ~ \"75th percentile\",\n      \"p90\" ~ \"90th percentile\")) |>\n    separate(activity_long, into = c(\"units\", \"activity_long\"), sep = \" - \") |>\n  select(year, sex, age_group, activity, units, activity_long, statistic, value) ->\ngrouped_stats_recoded\n\ngrouped_stats_recoded |>\n  filter(statistic == \"Number of people\") |>\n  pull(value) |>\n  min() ->\nmin_group_size\n\nif (min_group_size < 30) {\n  stop(paste(\n    \"Error: minimum group size too small to produce outputs while preserving\",\n    \"privacy of respondants. Checking groupings in analysis code.\"))\n}\n# start with hrs vars\ngrouped_stats_recoded |>\n  filter(units == \"Hours per week\", statistic == \"Average\") |>\n  ggplot() +\n    aes(x = age_group, y = value, fill = activity_long) +\n    geom_col() +\n    facet_grid(vars(year), vars(sex)) +\n    scale_fill_brewer(type = \"qual\") +\n    theme(\n      legend.position = \"top\",\n      legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/vis-means-1.png){width=672}\n:::\n:::\n\n\nThis is a good start, and it's already clear that there are big gender discrepancies in terms of tasks like Housework and Playing with your children. It might work better animating the waves, rather than facetting them:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_stats_recoded |>\n  filter(units == \"Hours per week\", statistic == \"Average\") |>\n  ggplot() +\n    aes(x = age_group, y = value, fill = activity_long) +\n    geom_col() +\n    facet_wrap(vars(sex), ncol = 2) +\n    transition_time(year) +\n    enter_fade() +\n    exit_fade() +\n    ease_aes(\"sine-in-out\") +\n    scale_fill_brewer(type = \"qual\") +\n    theme(\n      legend.position = \"top\",\n      legend.direction = \"horizontal\") +\n    labs(\n      title = \"Hours per week: {floor(frame_time)}\"\n    ) ->\nani_hrsweek_mean\n\nanim_save(\"ani_hrsweek_mean.mp4\",\n  ani_hrsweek_mean,\n  path = here(\"out\", \"assets\"),\n  renderer = ffmpeg_renderer())\n```\n:::\n\n\n::: {#fig-ani-hrsweek-mean}\n\n{{ video /assets/ani_hrsweek_mean.mp4 }}\n\nAnimation: hours spent per week on unpaid domestic and care work, broken down by activity, age group, sex and year\n\n:::\n\nWe could also look at this using the various quantiles we have computed, but that might be easier to do interactively. Let's write the data out and do the chart in a separate doc.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrouped_stats_recoded |>\n  filter(\n    units == \"Combined\",\n    statistic %in% c(\"Number of people\", \"Average\")) |>\n  pivot_wider(names_from = statistic, values_from = value) |>\n  write_csv(here(\"data\", \"hilda-unpaid-time-stats.csv\"))\n```\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}